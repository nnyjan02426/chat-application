name: Build and Deploy Node.js App to Azure Web App - WebChatApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Use the Node.js version your backend requires

      # Step 3: Change working directory to Backend
      - name: Change working directory
        working-directory: ./Backend
        run: echo "Changed to Backend directory"

      # Step 4: Add SOCKET_URL as an environment variable
      - name: Set environment variable for SOCKET_URL
        working-directory: ./Backend
        run: echo "REACT_APP_SOCKET_URL=${{ secrets.SOCKET_URL }}" >> $GITHUB_ENV

      # Step 5: Install dependencies
      - name: Install dependencies
        working-directory: ./Backend
        run: npm install

      # Optional step: Run tests
      # Uncomment if you have tests to run
      # - name: Run tests
      #   working-directory: ./Backend
      #   run: npm test

      # Step 6: Zip artifact for deployment
      - name: Zip artifact for deployment
        working-directory: ./Backend
        run: zip -r release.zip ./*

      # Step 7: Upload artifact for deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: Backend/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT

    steps:
      # Step 1: Download artifact from build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # Step 2: Unzip artifact for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Step 3: Log in to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 4: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'WebChatApp' # Your Azure Web App name
          slot-name: 'Production'
          package: .
          app-settings: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
